---
import { Image } from 'astro:assets';
import { Icon } from 'astro-icon/components';
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import TechSection from '../components/TechSection.astro';
---

<Layout title="Antonio Giroz | Software developer">
  <div class="flex flex-col flex-1 px-4 justify-center items-center">
    <Header />

    <main
      class="flex flex-col flex-1 mt-12 items-center justify-center md:mt-36 lg:max-w-5xl"
    >
      <div
        class="text-center grid-flow-row grid gap-8 justify-items-center md:text-left md:grid-cols-3 lg:gap-8"
      >
        <div class="rounded-full relative">
        <div class="rounded-full box relative">
          <Image
            src="/images/antonio-giroz.jpg"
            alt="Antonio Giroz`s logo"
            width={240}
            height={240}
            class="rounded-full h-180px mb-4 w-180px md:h-200px md:w-200px lg:h-240px lg:w-240px"
          />
        </div>
        </div>

        <div class="flex flex-col gap-6 md:col-span-2">
          <h1 class="text-4xl bold md:text-5xl">
            Hello!
            <Icon
              name="emojione:waving-hand"
              class="mt--4 w-48px h-48px inline-flex md:w-52px lg:w-64px lg:h-64px"
            />
            <br />
            I'm <strong class="text-theme-500">Antonio Giroz</strong>
          </h1>
          <h2 class="text-l uppercase md:text-xl">
            <strong>Frontend Team Lead</strong>
          </h2>
          <p class="lg:text-lg">
            I have been a software developer since 2007 and work remotely as a
            <strong>Frontend Team Lead</strong> at FMIT. I'm passionate about Vue, UI design, and
            committed to clean code and suitable architectures.
          </p>
        </div>
      </div>

      <TechSection />
    </main>
  </div>
</Layout>

<style>
  .box::before {
    content: '';
    z-index: -1;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background: linear-gradient(135deg, #4bc0cd 0%, #4cedf8 100%);
    transform: translate3d(0px, 0px, 0);
    filter: blur(50px);
    opacity: var(0.9);
    transition: opacity 0.3s;
    border-radius: inherit;
  }

  /* 
  * Prevents issues when the parent creates a 
  * stacking context. (For example, using the transform
  * property )
  */
  .box::after {
    content: '';
    z-index: -1;
    position: absolute;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    background: inherit;
    border-radius: inherit;
  }
</style>
